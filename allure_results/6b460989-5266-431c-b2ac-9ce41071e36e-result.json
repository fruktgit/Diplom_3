{"name": "При создании заказа, происходит увеличения значения счетчиков заказов \"Выполнено за все время\"/\"Выполнено за сегодня\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //button[text()=\"Оформить заказ\"]", "trace": "self = <test_order.TestCreateOrder object at 0x04108CB0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"6c44fbc6-d909-4c19-988b-63b18123aef4\")>\nsetup_and_teardown = None, counter = ('xpath', \"//p[text()='Выполнено за все время:']/following-sibling::p\")\n\n>   ???\n\nC:\\Users\\moov\\yandex\\Diplom\\Diplom_тут\\tests\\test_order.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:57: in click_order_button\n    self.move_and_click(MainPageLocators.CREATE_ORDER_BUTTON)\npages\\base_page.py:43: in move_and_click\n    element = self.driver.find_element(*locator)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00C09670>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: //button[text()=\\\\\".../content/shared/webdriver/Errors.sys.mjs:527:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //button[text()=\"Оформить заказ\"]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"}, "steps": [{"name": "Авторизация", "status": "passed", "steps": [{"name": "Перейти на страницу авторизации по кнопке \"Войти в аккаунт\"", "status": "passed", "start": 1740300782352, "stop": 1740300782653}, {"name": "Заполняем поле \"email\"", "status": "passed", "parameters": [{"name": "user_email", "value": "'ocooper@example.net'"}], "start": 1740300782653, "stop": 1740300782735}, {"name": "Заполняем поле \"Пароль\"", "status": "passed", "parameters": [{"name": "user_password", "value": "'sM2Rnq(8@_yC'"}], "start": 1740300782736, "stop": 1740300782776}, {"name": "Нажимаем кнопку «Войти»", "status": "passed", "start": 1740300782776, "stop": 1740300783052}], "parameters": [{"name": "user_login", "value": "'ocooper@example.net'"}, {"name": "user_password", "value": "'sM2Rnq(8@_yC'"}], "start": 1740300782352, "stop": 1740300783052}, {"name": "Перейти в \"ЛК\" по кнопке \"Личный кабинет\"", "status": "passed", "start": 1740300783053, "stop": 1740300786439}, {"name": "Переход на страницу Лента заказов", "status": "passed", "start": 1740300786439, "stop": 1740300790816}, {"name": "Получение количества заказов", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//p[text()='Выполнено за все время:']/following-sibling::p\")"}], "start": 1740300790816, "stop": 1740300790834}, {"name": "Переход в \"Конструктор\"", "status": "passed", "start": 1740300790834, "stop": 1740300794179}, {"name": "Добавить ингридиент в заказ", "status": "passed", "steps": [{"name": "Ждем элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[text()=\"Флюоресцентная булка R2-D3\"]')"}], "start": 1740300794181, "stop": 1740300794212}], "start": 1740300794181, "stop": 1740300794238}, {"name": "Нажать на кнопку Оформить заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //button[text()=\"Оформить заказ\"]\n\n", "trace": "  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\pages\\main_page.py\", line 57, in click_order_button\n    self.move_and_click(MainPageLocators.CREATE_ORDER_BUTTON)\n  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\pages\\base_page.py\", line 43, in move_and_click\n    element = self.driver.find_element(*locator)\n  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 978, in find_element\n    'value': value})['value']\n  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\moov\\yandex\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1740300794238, "stop": 1740300797260}], "parameters": [{"name": "driver", "value": "'firefox'"}, {"name": "counter", "value": "('xpath', \"//p[text()='Выполнено за все время:']/following-sibling::p\")"}], "start": 1740300781560, "stop": 1740300797260, "uuid": "d604b9ad-88dd-4eef-bd0b-cd6245056eda", "historyId": "ec1db1f1fdd2da22618eec5d197515cc", "testCaseId": "c689f8d0651aa0114bfe21bd0151cf67", "fullName": "tests.test_order.TestCreateOrder#test_today_orders_counter", "labels": [{"name": "suite", "value": "Лента заказов"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "LAPTOP-JTVFLPC5"}, {"name": "thread", "value": "24824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}